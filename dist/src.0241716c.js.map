{"version":3,"sources":["../node_modules/@goodleby/lib/build/goodlebyLib.js","components/coordinates.ts","components/snake.ts","components/apple.ts","components/redApple.ts","components/orangeApple.ts","components/game.ts","index.ts"],"names":["n","t","exports","module","define","amd","goodlebyLib","self","d","r","e","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","Symbol","toStringTag","value","addTime","E","camelize","b","countDecimals","i","debounce","j","filterPhone","M","floorTo","u","gcd","c","getDOM","x","getMatrix","m","getMatrixClone","p","getMemoizedFn","S","getPrimes","P","getRandBool","getRandNum","getRandPrime","z","getScrollbarHeight","L","getScrollbarWidth","A","linearMatrixDot","h","matrixApply","s","matrixDot","a","matrixMinus","l","matrixPlus","f","onSwipe","O","popSlash","regexpEscape","y","relativeUrl","g","roundTo","shuffleArr","T","stringReplace","w","transposeMatrix","v","arguments","length","Math","floor","random","sort","every","round","pow","toString","split","map","Error","reduce","Array","fill","isArray","replace","RegExp","keys","join","concat","filter","toUpperCase","toLowerCase","slice","Number","document","createElement","innerHTML","from","children","window","innerWidth","body","clientWidth","innerHeight","clientHeight","JSON","stringify","apply","performance","now","clearTimeout","setTimeout","changedTouches","clientX","clientY","startX","startY","addEventListener","onTouchEnd","onTouchMove","sqrt","values"],"mappings":"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","file":"src.0241716c.js","sourceRoot":"../src","sourcesContent":["/*! For license information please see goodlebyLib.js.LICENSE.txt */\n!function(n,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.goodlebyLib=t():n.goodlebyLib=t()}(self,(function(){return function(){\"use strict\";var n={d:function(t,r){for(var e in r)n.o(r,e)&&!n.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:r[e]})},o:function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r:function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})}},t={};n.r(t),n.d(t,{addTime:function(){return E},camelize:function(){return b},countDecimals:function(){return i},debounce:function(){return j},filterPhone:function(){return M},floorTo:function(){return u},gcd:function(){return c},getDOM:function(){return x},getMatrix:function(){return m},getMatrixClone:function(){return p},getMemoizedFn:function(){return S},getPrimes:function(){return P},getRandBool:function(){return e},getRandNum:function(){return r},getRandPrime:function(){return z},getScrollbarHeight:function(){return L},getScrollbarWidth:function(){return A},linearMatrixDot:function(){return h},matrixApply:function(){return s},matrixDot:function(){return a},matrixMinus:function(){return l},matrixPlus:function(){return f},onSwipe:function(){return O},popSlash:function(){return d},regexpEscape:function(){return y},relativeUrl:function(){return g},roundTo:function(){return o},shuffleArr:function(){return T},stringReplace:function(){return w},transposeMatrix:function(){return v}});var r=function(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],e=Math.floor(Math.random()*(t-n+1-r.length)+n);return r.sort((function(n,t){return n-t})).every((function(n){return n<=e&&(e++,!0)})),e},e=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.5;return Math.random()<n},o=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return Math.round(n*Math.pow(10,t))/Math.pow(10,t)},u=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return Math.floor(n*Math.pow(10,t))/Math.pow(10,t)},i=function(n){return Math.floor(n)!==n?n.toString().split(\".\")[1].length:0},c=function n(t,r){return 0===r?t:n(r,t%r)},a=function(n,t){var r=[n,t],e=r.map((function(n){return n[0].length}));if(!r.every((function(n,t){return n.every((function(n){return n.length===e[t]}))})))throw new Error(\"All rows in a matrix must have an equal amount of columns\");if(e[0]!==t.length)throw new Error(\"Amount of columns in the 1st matrix must match an amount of rows in the 2nd matrix\");return n.map((function(n){return t[0].map((function(r,e){return n.reduce((function(n,r,o){return n+r*t[o][e]}),0)}))}))},f=function(n,t){var r=[n,t],e=n[0].length;if(!r.every((function(n){return n.every((function(n){return n.length===e}))}))||n.length!==t.length)throw new Error(\"Matrices must be same size\");return n.map((function(n,r){return n.map((function(n,e){return n+t[r][e]}))}))},l=function(n,t){var r=[n,t],e=n[0].length;if(!r.every((function(n){return n.every((function(n){return n.length===e}))}))||n.length!==t.length)throw new Error(\"Matrices must be same size\");return n.map((function(n,r){return n.map((function(n,e){return n-t[r][e]}))}))},h=function(n,t){var r=[n,t],e=n[0].length;if(!r.every((function(n){return n.every((function(n){return n.length===e}))}))||n.length!==t.length)throw new Error(\"Matrices must be same size\");return n.map((function(n,r){return n.map((function(n,e){return n*t[r][e]}))}))},s=function(n,t){return n.map((function(n,r){return n.map((function(n,e){return t(n,e,r)}))}))},m=function(n,t,r){return Array(n).fill(0).map((function(n,e){return Array(t).fill(0).map((function(n,t){return r(t,e)}))}))},p=function n(t,r){return t.map((function(t){return Array.isArray(t)?n(t,r):r()}))},v=function(n){var t=n[0].length;if(!n.every((function(n){return n.length===t})))throw new Error(\"All rows in a matrix must have an equal amount of columns\");return Array(t).fill(0).map((function(t,r){return n.map((function(n){return n[r]}))}))},d=function(n){return n.replace(/\\/+$/,\"\")},g=function(n){return d(n.replace(/^(?:\\/\\/|[^/])+/,\"\"))},y=function(n){return n.replace(/[.*+\\-?^${}()|[\\]\\\\]/g,\"\\\\$&\")},w=function(n,t){var r=new RegExp(Object.keys(t).map((function(n){return y(n)})).join(\"|\"),\"g\");return n.replace(r,(function(n){return t[n]}))},M=function(n,t){var r=new RegExp(\"\".concat(t?\"(^\\\\s*\\\\+?\\\\s*(\".concat(t,\"))?\"):\"\",\"[^0-9]*\"),\"g\");return[t,n.replace(r,\"\")].filter((function(n){return!!n})).join(\"\")},b=function(n){var t=n.replace(/[^a-z]+([a-z])?/gi,(function(n,t){return t?t.toUpperCase():\"\"}));return t[0].toLowerCase()+t.slice(1)},E=function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];for(var e=t.reduce((function(n,t){return t.split(\":\").length>n?t.split(\":\").length:n}),0),o=Array(e).fill(0).map((function(n,r){return t.reduce((function(n,e,o){return n+Number(t[o].split(\":\")[r]||0)}),0)})),u=e-2;u>=0;u--)o[u]+=Math.floor(o[u+1]/60),o[u+1]%=60;return o.map((function(n){return n<10?\"0\".concat(n):n})).join(\":\")},T=function(n){for(var t=n.slice(),r=t.length-1;r>0;r--){var e=Math.floor(Math.random()*(r+1)),o=[t[e],t[r]];t[r]=o[0],t[e]=o[1]}return t},x=function(n){var t=document.createElement(\"div\");return t.innerHTML=n,Array.from(t.children)},A=function(){return window.innerWidth-document.body.clientWidth},L=function(){return window.innerHeight-document.body.clientHeight},S=function(n){var t={};return function(){for(var r=arguments.length,e=new Array(r),o=0;o<r;o++)e[o]=arguments[o];var u=JSON.stringify(e);return t[u]||(t[u]=n.apply(void 0,e))}},j=function(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,e=null,o=null,u=function(){o=null,n.apply(void 0,arguments)};return function(){for(var n=arguments.length,i=new Array(n),c=0;c<n;c++)i[c]=arguments[c];o||(o=performance.now()),e&&(clearTimeout(e),e=null),r&&performance.now()-o>=r?u.apply(void 0,i):e=setTimeout((function(){return u.apply(void 0,i)}),t)}},O=function(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{swipeLength:50},e={startX:0,startY:0,onTouchStart:function(t){var r=t.changedTouches[0],e=r.clientX,o=r.clientY;this.startX=e,this.startY=o,n.addEventListener(\"touchend\",this.onTouchEnd),n.addEventListener(\"touchmove\",this.onTouchMove)},onTouchMove:function(e){var o=r.swipeLength,u=this.startX,i=this.startY,c=e.changedTouches[0],a=c.clientX-u,f=c.clientY-i;a>=o&&t(e,\"right\"),a<=-o&&t(e,\"left\"),f>=o&&t(e,\"down\"),f<=-o&&t(e,\"up\"),(Math.abs(a)>=o||Math.abs(f)>=o)&&(n.removeEventListener(\"touchend\",this.onTouchEnd),n.removeEventListener(\"touchmove\",this.onTouchMove))},onTouchEnd:function(){n.removeEventListener(\"touchend\",this.onTouchEnd),n.removeEventListener(\"touchmove\",this.onTouchMove)}};n.addEventListener(\"touchstart\",e.onTouchStart)},P=function(n,t){for(var r=Array(t+1).fill(0).map((function(n,t){return t})),e=2;e<=Math.sqrt(t+1);e++)for(var o=Math.pow(e,2);o<t+1;o+=e)delete r[o];return Object.values(r.slice(n))},z=function(n,t){var e=P(n,t);return e[r(0,e.length-1)]};return t}()}));","import { GameCoordinates } from './game';\n\nexport type direction = 'left' | 'right' | 'up' | 'down';\n\nexport const moveCoordinates = (\n  coordinates: GameCoordinates,\n  direction: direction\n): GameCoordinates => {\n  let { x, y } = coordinates;\n  switch (direction) {\n    case 'left':\n      x--;\n      break;\n    case 'right':\n      x++;\n      break;\n    case 'up':\n      y--;\n      break;\n    case 'down':\n      y++;\n      break;\n  }\n  return { x, y };\n};\n\nexport const getOpposite = (direction: direction): direction => {\n  const opposite: { [key: string]: direction } = {\n    left: 'right',\n    right: 'left',\n    up: 'down',\n    down: 'up',\n  };\n  return opposite[direction];\n};\n","import { GameCoordinates } from './game';\nimport { direction, moveCoordinates } from './coordinates';\n\nexport class Snake {\n  length: number;\n  body: GameCoordinates[];\n\n  constructor(x: number, y: number, length: number) {\n    this.length = length;\n    this.body = [{ x, y }];\n  }\n\n  move(direction: direction) {\n    const coordinates = moveCoordinates(this.body[0], direction);\n    this.body.unshift(coordinates);\n    this.body = this.body.slice(0, this.length);\n  }\n\n  grow(amount = 1) {\n    this.length += amount;\n  }\n}\n\nexport default Snake;\n","import { GameCoordinates } from './game';\n\nexport class Apple {\n  coordinates: GameCoordinates;\n  score: number;\n  color: string;\n\n  constructor(x: number, y: number, score: number, color: string) {\n    this.coordinates = { x, y };\n    this.score = score;\n    this.color = color;\n  }\n}\n\nexport default Apple;\n","import { Apple } from './apple';\n\nexport class RedApple extends Apple {\n  constructor(x: number, y: number) {\n    super(x, y, 1, '#f22');\n  }\n}\n\nexport default RedApple;\n","import { Apple } from './apple';\n\nexport class OrangeApple extends Apple {\n  constructor(x: number, y: number) {\n    super(x, y, 2, '#fc6');\n  }\n}\n\nexport default OrangeApple;\n","import { getRandBool, getRandNum, onSwipe } from '@goodleby/lib';\nimport { direction, getOpposite } from './coordinates';\nimport Snake from './snake';\nimport Apple from './apple';\nimport RedApple from './redApple';\nimport OrangeApple from './orangeApple';\n\nexport interface GameCoordinates {\n  x: number;\n  y: number;\n}\n\nexport class Game {\n  area: number;\n  root: Element;\n  messages: HTMLElement;\n  score: HTMLElement;\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  snake: Snake;\n  lastDirection!: direction;\n  queue: direction[] = [];\n  apples: Apple[] = [];\n\n  _play = false;\n  fieldSize = 15;\n  cellSize = 25;\n  startLength = 3;\n  speed = 200;\n  orangeAppleSpawnRate = 0.02;\n  orangeAppleDuration = 7000;\n\n  constructor(selector: string) {\n    this.area = this.fieldSize ** 2;\n    const root = document.querySelector(selector);\n    if (!root) {\n      throw new Error('Passed `selector` did not match any DOM element');\n    }\n    this.root = root;\n    this.root.innerHTML = '';\n\n    this.messages = document.createElement('div');\n    this.messages.classList.add('messages');\n\n    this.score = document.createElement('div');\n    this.score.classList.add('score');\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.fieldSize * this.cellSize;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Canvas did not return context');\n    }\n    this.ctx = ctx;\n\n    this.root.append(this.messages);\n    this.root.append(this.score);\n    this.root.append(this.canvas);\n\n    const midPoint = Math.floor(this.fieldSize / 2);\n    this.snake = new Snake(midPoint, midPoint, this.startLength);\n    this.loop = this.loop.bind(this);\n\n    window.addEventListener('keyup', (e) => {\n      if (this.lastDirection && !this._play) return;\n      let direction: direction | null = null;\n      switch (e.code) {\n        case 'ArrowLeft':\n          direction = 'left';\n          break;\n        case 'ArrowRight':\n          direction = 'right';\n          break;\n        case 'ArrowUp':\n          direction = 'up';\n          break;\n        case 'ArrowDown':\n          direction = 'down';\n          break;\n      }\n      if (direction && direction !== this.queue[0]) {\n        this.queue.unshift(direction);\n        this.queue = this.queue.slice(0, 2);\n        if (!this.lastDirection) this.play();\n      }\n    });\n\n    onSwipe(document.body, (_, direction) => {\n      if (this.lastDirection && !this._play) return;\n      if (direction !== this.queue[0]) {\n        this.queue.unshift(direction);\n        this.queue = this.queue.slice(0, 2);\n        if (!this.lastDirection) this.play();\n      }\n    });\n\n    this.render();\n    this.updateScore();\n  }\n\n  play() {\n    this._play = true;\n    this.loop();\n  }\n\n  pause() {\n    this._play = false;\n  }\n\n  getRandCoords(): GameCoordinates {\n    const snakeCells = this.snake.body.map(\n      ({ x, y }) => y * this.fieldSize + x\n    );\n    const applesCells = this.apples.map(\n      ({ coordinates: { x, y } }) => y * this.fieldSize + x\n    );\n    const skipCells = ([] as number[]).concat(snakeCells, applesCells);\n\n    const cellIndex = getRandNum(0, this.area - 1, skipCells);\n    const y = Math.floor(cellIndex / this.fieldSize);\n    const x = cellIndex - y * this.fieldSize;\n\n    return { x, y };\n  }\n\n  clearField() {\n    const { width, height } = this.canvas;\n    this.ctx.clearRect(0, 0, width, height);\n  }\n\n  renderField() {\n    const { fieldSize, ctx, cellSize } = this;\n    ctx.fillStyle = '#000';\n    for (let x = 0; x < fieldSize; x++) {\n      for (let y = 0; y < fieldSize; y++) {\n        ctx.fillRect(\n          x * cellSize + 1,\n          y * cellSize + 1,\n          cellSize - 2,\n          cellSize - 2\n        );\n      }\n    }\n  }\n\n  renderSnake() {\n    const { ctx, cellSize } = this;\n    const { body } = this.snake;\n    ctx.fillStyle = '#2f4';\n    body.forEach((coords) => {\n      const { x, y } = coords;\n      ctx.fillRect(\n        x * cellSize + 1,\n        y * cellSize + 1,\n        cellSize - 2,\n        cellSize - 2\n      );\n    });\n  }\n\n  moveSnake() {\n    const { queue, lastDirection } = this;\n    for (let i = queue.length - 1; i >= 0; i--) {\n      if (queue[i] !== getOpposite(lastDirection) && queue[i] !== lastDirection)\n        break;\n      else queue.splice(i, 1);\n    }\n    const direction = queue.pop() || lastDirection;\n    this.snake.move(direction);\n    this.lastDirection = direction;\n  }\n\n  renderApples() {\n    const { ctx, cellSize, apples } = this;\n    apples.forEach((apple) => {\n      const { x, y } = apple.coordinates;\n      ctx.fillStyle = apple.color;\n      ctx.fillRect(\n        x * cellSize + 1,\n        y * cellSize + 1,\n        cellSize - 2,\n        cellSize - 2\n      );\n    });\n  }\n\n  spawnRedApple() {\n    const { x, y } = this.getRandCoords();\n    const apple = new RedApple(x, y);\n    this.apples.push(apple);\n  }\n\n  needRedApple(): boolean {\n    return !this.apples.find((apple) => apple instanceof RedApple);\n  }\n\n  spawnOrangeApple() {\n    const { x, y } = this.getRandCoords();\n    const apple = new OrangeApple(x, y);\n    this.apples.push(apple);\n    setTimeout(() => {\n      const index = this.apples.indexOf(apple);\n      if (index !== -1) this.apples.splice(index, 1);\n    }, this.orangeAppleDuration);\n  }\n\n  needOrangeApple(): boolean {\n    return (\n      !this.apples.find((apple) => apple instanceof OrangeApple) &&\n      getRandBool(this.orangeAppleSpawnRate)\n    );\n  }\n\n  checkLose(): boolean {\n    const { fieldSize, snake } = this;\n    const { x, y } = snake.body[0];\n    return (\n      x < 0 ||\n      x > fieldSize - 1 ||\n      y < 0 ||\n      y > fieldSize - 1 ||\n      snake.body.slice(1).some((coords) => coords.x === x && coords.y === y)\n    );\n  }\n\n  lose() {\n    this.pause();\n    this.showMessage('Sorry, you lost.', 'danger');\n  }\n\n  checkWin(): boolean {\n    const { area, snake } = this;\n    return snake.body.length === area;\n  }\n\n  win() {\n    this.pause();\n    this.showMessage('You won!', 'success');\n  }\n\n  checkAppleCollisions() {\n    const { x, y } = this.snake.body[0];\n    this.apples.forEach((apple) => {\n      const { coordinates, score } = apple;\n      if (coordinates.x === x && coordinates.y === y) {\n        this.snake.grow(score);\n        this.updateScore();\n        this.apples.splice(this.apples.indexOf(apple), 1);\n      }\n    });\n  }\n\n  render() {\n    this.clearField();\n    this.renderField();\n    this.renderSnake();\n    this.renderApples();\n  }\n\n  showMessage(text: string, type: 'info' | 'success' | 'danger' = 'info') {\n    const message = document.createElement('div');\n    message.classList.add('message', type);\n    message.innerText = text;\n    this.messages.append(message);\n  }\n\n  updateScore() {\n    this.score.innerText = `Your score: ${this.snake.length}`;\n  }\n\n  loop() {\n    if (this.needRedApple()) this.spawnRedApple();\n    if (this.needOrangeApple()) this.spawnOrangeApple();\n    this.moveSnake();\n    this.checkAppleCollisions();\n    if (this.checkLose()) return this.lose();\n    if (this.checkWin()) this.win();\n    this.render();\n    if (this._play)\n      setTimeout(() => requestAnimationFrame(this.loop), this.speed);\n  }\n}\n\nexport default Game;\n","import Game from './components/game';\n\nconst game = new Game('#root');\n"]}